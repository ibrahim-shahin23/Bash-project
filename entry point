#! /usr/bin/bash 

# DBMS initialization

if [  ! -d "~/Downloads/bash/Bash-project/DBMS" ]
then 
	mkdir -p ~/Downloads/bash/Bash-project/DBMS 
fi

cd ~/Downloads/bash/Bash-project/DBMS 
echo DBMS is running...

# CreateDatabase SelectDatabase CreateTable InsertTable 

select var in CreateDatabase SelectDatabase ListDatabases DropDatabase
do
	case $var in
	"CreateDatabase")
		read -p "Enter a new Database name: " DB_name
		if [[ -z $DB_name ]]
		then
			echo invalid DBname
		else
			if [ -e "$DB_name" ]
			then 
				echo $DB_name Database is already exist
			else
				mkdir "$DB_name"
				echo $DB_name Database is created successfully
			fi
		fi
		
	;;
	"SelectDatabase")
		read -p "Please Enter your Database name: " DB_name
		if [[ -z $DB_name ]]
		then
			echo invalid DBname
		else
			if [ -e "$DB_name" ]
			then 
				cd "$DB_name"
				echo Connected to database $DB_name
				select var in CreateTable DropTable
				do
					case $var in
					"CreateTable")
						read -p "Enter new table name: " TB_name
						if [[ -z $TB_name ]]
						then
							echo invalid Table name
						else
							if [[ -e $TB_name ]]
							then 
								echo table is already exist
							else
								read -p "enter number of columns: " colNum
								flag=0
									for ((i=0;i<$colNum;i++))
									do
										line=""
										read -p "enter name of col $((i+1)): " colName
										line+=$colName:
										read -p "enter Datatype of Col $colName: " datatype
										line+=$datatype:
										if [[ $flag -eq 0 ]]
										then
											read -p "Do you want to make $colData primary key: " pkCheck
											if [[ $pkCheck =~ ^([yY][eE][sS]|[Yy]) ]] 
											then
												line+=pk
												flag=1
											fi
										fi
										echo $line >> .$TB_name-metadata
										done
										touch $TB_name
										echo "Table is created Successfully"
							fi
						fi
					;;
					"DropTable")
						read -p "Please Enter a Table to remove: " TB_name
						if [[ -z $TB_name ]]
						then
							echo invalid TBname
						else
							if [ -e "$TB_name" ]
							then 
								rm "$TB_name" ".$TB_name-metadata"
								echo table $TB_name is removed
							else
								echo $TB_name Table doesn\'t exist
							fi
						fi
					;;
					*)
					echo invalid input
					esac
				done
			else
				echo $DB_name Database doesn\'t exist
			fi
		fi
		
	;;
	"ListDatabases")
		ls 
	;;
	"DropDatabase")
		read -p "Please Enter a Database to remove: " DB_name
		if [[ -z $DB_name ]]
		then
			echo invalid DBname
		else
			if [ -e "$DB_name" ]
			then 
				rm -r "$DB_name"
				echo database $DB_name is removed
			else
				echo $DB_name Database doesn\'t exist
			fi
		fi
	;;
	*)
		echo invalid input
esac
done
